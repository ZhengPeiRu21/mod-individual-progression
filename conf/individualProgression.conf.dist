#
# Copyright (C) 2016+ AzerothCore <www.azerothcore.org>, released under GNU AGPL v3 license: https://github.com/azerothcore/azerothcore-wotlk/blob/master/LICENSE-AGPL3
#

[worldserver]

########################################
# Individual Progression Configuration
########################################

# IndividualProgression.Enable
#
#        Description: Enable Individual Progression Module
#                     Please note that like all AzerothCore modules, database changes cannot be undone through config settings.
#                     This means that world changes like restoring Vanilla quests and NPC stats will remain in place even if disabled.
#                     Disabling the module will disable functionality like access restrictions, level caps, damage adjustments, etc.
#
#        Default:     1 - Enabled
#                     0 - Disabled
#
IndividualProgression.Enable = 1

# IndividualProgression.EnforceGroupRules
#
#        Description: Only allow players to group with others in the same progression phase
#
#        Default:     1 - Enabled
#                     0 - Disabled
#
IndividualProgression.EnforceGroupRules = 1

# IndividualProgression.VanillaPowerAdjustment
#
#        Description: Adjustment to player's attack power before completing Vanilla content and opening the Dark Portal
#                     This is meant to provide a more accurate Vanilla feeling in Vanilla content
#                     Applied linearly per level between levels 11 and 60
#                     Set to 1 (100% of regular damage) to disable
#
#        Default:     1 - Disabled
#        Vanilla:   0.6 - 60% of regular damage
#
IndividualProgression.VanillaPowerAdjustment = 1

# IndividualProgression.VanillaHealingAdjustment
#
#        Description: Adjustment to player's healing power before completing Vanilla content and opening the Dark Portal
#                     This is meant to provide a more accurate Vanilla feeling in Vanilla content
#                     Applied linearly per level between levels 11 and 60
#                     Set to 1 (100% of regular damage) to disable
#
#        Default:     1 - Disabled
#        Vanilla:   0.5 - 50% of regular healing
#
IndividualProgression.VanillaHealingAdjustment = 1

# IndividualProgression.VanillaHealthAdjustmnet
#
#        Description: Adjustment to player's max HP before completing Vanilla content and opening the Dark Portal
#                     This is meant to provide a more accurate Vanilla feeling in Vanilla content
#                     Applied linearly per level between levels 11 and 60
#                     Set to 1 (100% of regular health) to disable
#
#        Default:     1 - Disabled
#        Vanilla:   0.8 - 80% of regular health
#
IndividualProgression.VanillaHealthAdjustment = 1

# IndividualProgression.TBCPowerAdjustment
#
#        Description: Adjustment to player's attack power after opening the Dark Portal but before completing TBC content
#                     This is meant to provide a more accurate TBC feeling in TBC content
#                     Unlike Vanilla adjustment, a flat value is always used
#                     Set to 1 (100% of regular damage) to disable
#
#        Default:     1 - Disabled
#        TBC:       0.6 - 60% of regular damage
#
IndividualProgression.TBCPowerAdjustment = 1

# IndividualProgression.TBCHealingAdjustment
#
#        Description: Adjustment to player's healing power after opening the Dark Portal but before completing TBC content
#                     This is meant to provide a more accurate TBC feeling in TBC content
#                     Unlike Vanilla adjustment, a flat value is always used
#                     Set to 1 (100% of regular damage) to disable
#
#        Default:     1 - Disabled
#        TBC:       0.5 - 50% of regular healing
#
IndividualProgression.TBCHealingAdjustment = 1

# IndividualProgression.TBCHealthAdjustment
#
#        Description: Adjustment to player's max HP after opening the Dark Portal but before completing TBC content
#                     This is meant to provide a more accurate TBC feeling in TBC content
#                     Unlike Vanilla adjustment, a flat value is always used
#                     Set to 1 (100% of regular health) to disable
#
#        Default:     1 - Disabled
#        TBC:       0.8 - 80% of regular health
#
IndividualProgression.TBCHealthAdjustment = 1

# IndividualProgression.QuestXPFix
#
#        Description: Quest XP for Vanilla and TBC quests was boosted as a catchup mechanism in patches 2.3.0 and 3.0.2
#                     Enable this option to reduce quest XP for affected quest to be closer to original values
#
#        Default:     1 - Enabled
#                     0 - Disabled
#
IndividualProgression.QuestXPFix = 1

# IndividualProgression.PreviousGearTuning
#
#        Description: Reduces the power of previous expansion end-game gear when entering the next expansion for leveling.
#                     This resolves a balancing problem where players would not get any useful gear until near the end of the leveling experience,
#                     as well as overpowering the leveling content. This is particularly true in TBC leveling due to the strength of Naxx 40 gear.
#                     Set to 0 (0% adjustment) to disable
#
#        Default:     0 - Disabled
#                  0.01 - 1% reduced health and damage per previous expansion epic
#
IndividualProgression.PreviousGearTuning = 0

# IndividualProgression.RequireNaxxStrathEntrance
#
#        Description: If enabled, this will require players to first enter Naxx 40 through the original beta entrance in the back of Stratholme,
#                     before being able to use the teleportation crystal in EPL. This is consistent behavior with other Vanilla raids (MC, BWL).
#                     If disabled, players can enter Naxx 40 through the crystal as soon as they are attuned and they have reached the correct
#                     progression level - no Stratholme run will be required.
#
#        Default:     0 - Disabled
#                     1 - Enabled
#
IndividualProgression.RequireNaxxStrathEntrance = 0

# IndividualProgression.MoltenCore.ManualRuneHandling
#
#        Description: Defines whether Molten Core runes are handled manually (dousing through Aqual Quintessence) 
#                     or automatic when bosses are defeated (WotLK default)
#
#        Default:     1 - Enabled (requires dousing)
#                     0 - Disabled (automatic, handled when bosses are defeated)
#
IndividualProgression.MoltenCore.ManualRuneHandling = 1

# IndividualProgression.MoltenCore.AqualEssenceCooldownReduction
#
#        Description: Reduces the cooldown of Eternal Quintessences by the amount specified.
#
#        Default:     0 - Disabled (1 hour cooldown)
#                     60 - (No cooldown)
#
IndividualProgression.MoltenCore.AqualEssenceCooldownReduction = 0

# IndividualProgression.SerpentshrineCavern.RequireAllBosses
#
#        Description: Requires all bosses being killed before accessing Vashj's console panel.
#
#        Default:     1 - Enabled
#                     0 - Disabled
#
IndividualProgression.SerpentshrineCavern.RequireAllBosses = 1

# IndividualProgression.TheEye.RequireAllBosses
#
#        Description: Requires all bosses being killed to open the doors to Kael
#
#        Default:     1 - Enabled
#                     0 - Disabled
#
IndividualProgression.TheEye.RequireAllBosses = 1

# IndividualProgression.FishingFix
#
#        Description: Before patch 3.1, fishing skill had progression and had to be leveled in low level zones before high level areas could add skill
#                     In patch 3.1, it was changed to allow leveling fishing even when catching junk in high level zones, allowing progression to be skipped
#                     This reverts that changed.
#
#        Default:     1 - Enabled (Pre 3.1 behavior - Fishing requires progression through zone levels)
#                     0 - Disabled (Post 3.1 behavior - Allow leveling fishing in any area)
#
IndividualProgression.FishingFix = 1

# IndividualProgression.SimpleConfigOverride
#
#        Description: If enabled, allow IndividualProgression module to set several AzerothCore values to suit individual progression
#                     Many of these config options were added with IndividualProgression in mind.
#                     For more advanced individual tuning, disable this option and change the respective values in worldserver.conf
#
#                     Changed options include:
#                     Water Breath Timer to 1 Minute (Vanilla value, changed to 3 Minutes in WotLK)
#                     Disable Quest Object sparkle and object quest markers (added in patch 2.3)
#                     Enable PlayerSettings (required by Individual Progression module)
#                     Do not enforce DBC Item Attributes, so that Vanilla item changes can override client values
#
#        Default:     1 - Enabled
#                     0 - Disabled
#
IndividualProgression.SimpleConfigOverride = 1

# IndividualProgression.ProgressionLimit
#
#        Description: If enabled, players will not be able to proceed beyond this progression stage.
#                     Please refer to IndividualProgression.h/ProgressionState enum for progression stage values.
#                     For example, a value of 6 will limit players to Vanilla content.
#
#        Default:     0 - Disabled (players may progress up to the maximum progression stage of 18, which is the completion of WotLK content)
#                     1-17 - Set a lower maximum attainable progression stage 
#
IndividualProgression.ProgressionLimit = 0

# IndividualProgression.StartingProgression
#
#        Description: If enabled, players will begin at this progression stage.
#                     Existing players who are at an earlier stage will be set to this stage upon log in.
#                     Please refer to IndividualProgression.h/ProgressionState enum for progression stage values.
#
#        Default:     0 - Disabled (start at stage 0)
#                     1-18 - Set higher starting progression stage
#
IndividualProgression.StartingProgression = 0

# IndividualProgression.QuestMoneyAtLevelCap
#
#        Description: If enabled, players at the level cap for the current progression stage will receive
#                     extra money when completing quests, as if they were level 80. This feature was added in patch 1.10
#                     so it is a Vanilla feature.
#                     Disable to not grant extra money at progression stage level cap. (Please note that completing quests at the level cap of the server,
#                     configured in worldserver.conf will always provide extra money, as hard-coded in AzerothCore.)
#
#        Default:     1 - Enabled
#                     0 - Disabled
#
IndividualProgression.QuestMoneyAtLevelCap = 1

# IndividualProgression.RepeatableVanillaQuestsXP
#
#        Description: Some repeatable quests in Vanilla gave XP every time they were turned in.
#                     Enable this feature to allow these quests to have the Vanilla behavior and give XP each turn in.
#                     Disable to have the WotLK behavior and only grant XP once.
#
#        Default:     1 - Enabled
#                     0 - Disabled
#
IndividualProgression.RepeatableVanillaQuestsXP = 1

# IndividualProgression.TbcRacesUnlockProgression
#
#        Description: The progression stage at which TBC races (Draenei and Blood Elves) will be unlocked.
#                     Races will be unlocked when the player reaches this level with any character on the account.
#                     Disable to have TBC races available by default.
#                     Please refer to IndividualProgression.h/ProgressionState enum for progression stage values.
#
#        Default:     0 - TBC races always available to be created
#                     1-18 - Set a higher required progression stage to create TBC race characters
#
IndividualProgression.TbcRacesUnlockProgression = 0

# IndividualProgression.DeathKnightUnlockProgression
#
#        Description: The progression stage at which Death Knight characters can be created.
#                     Death Knights will be available when the player reaches this level with any character on the account.
#                     Disable to not let Individual Progression influence DK creation.
#                     Please note that all other Death Knight creation restrictions from worldserver.conf still apply.
#                     The default value is to not allow Death Knight creation until TBC content is cleared.
#                     This is due to the game not having a proper progression balancing for Death Knights until WotLK,
#                     but please adjust as desired.
#
#        Default:     13 - TBC must be completed to create Death Knights
#                     0 - Death Knights always available to be created
#                     1-12, 14-18 - Set a different required progression stage to create Death Knights
#
IndividualProgression.DeathKnightUnlockProgression = 13

# IndividualProgression.DeathKnightStartingProgression
#
#        Description: The progression stage at which Death Knight characters will begin.
#
#        Default:     13 - Death Knights start at the beginning of WotLK
#                     0-12, 14-18 - Set a different starting progression stage for Death Knights
#
IndividualProgression.DeathKnightStartingProgression = 13

# IndividualProgression.DisableDefaultProgression
#
#        Description: Disable the regular progression flow, so progression must be advanced through custom creature progression entries
#
#        Default:     0 - Disabled
#                     1 - Enabled
#
IndividualProgression.DisableDefaultProgression = 0

# IndividualProgression.CustomProgression
#
#        Description: A list of creature IDs paired to progression states. When a creature on the list is defeated by a player,
#                     the player will be set to that progression state. Used for custom, non-standard progression.
#                     Not needed for regular, Blizz-like progress through expansions, which works by default.
#                     Example: IndividualProgression.CustomProgression="448 6, 639 11"
#                     This example would allow players access to TBC content for defeating Hogger (entry 448), and Northrend content for defeating VanCleef (entry 639)
#                     Leave empty to disable (default.)
#
#        Default:     "" - Disabled (default)
#
IndividualProgression.CustomProgression = ""

# IndividualProgression.AllowEarlyDungeonSet2
#
#        Description: Dungeon Set 2 was introduced in patch 1.10 and requires completing some AQ content that is normally not available until a later phase
#                     When enabled, this allows the relevant content to be accessed early so that Dungeon Set 2 can be acquired before it is made obsolete
#                     by raid gear.
#
#        Default:     0 - Disabled
#                     1 - Enabled
#
IndividualProgression.AllowEarlyDungeonSet2 = 0

# IndividualProgression.PvPGearRequirements
#
#        Description: Requires players to have earned relevant PvP Titles before high level PvP gear can be equipped
#
#        Default:     1 - Enabled
#                     0 - Disabled
#
IndividualProgression.PvPGearRequirements = 1

# IndividualProgression.DisableRDF
#
#        Description: Enable or disable the Random Dungeon Finder feature within the context of Individual Progression. 
#                     Queuing for specific dungeons and Holiday Events will still be possible. (Use DungeonFinder.OptionsMask in worldserver.conf to completely disable the LFG tool.)
#
#        Default:     1 - RDF Disabled
#                     0 - RDF Enabled
#
IndividualProgression.DisableRDF = 1

# IndividualProgression.ExcludeAccounts
#
#        Description: Enable or disable the exclusion of accounts from Individual Progression.
#                     This is useful for accounts that are used for bots, testing, or other purposes where progression should not be enforced.
#
#        Default:     1 - Enabled
#                     0 - Disabled
#
IndividualProgression.ExcludeAccounts = 1

# IndividualProgression.ExcludedAccountsRegex
#
#        Description: A regular expression to match account names that should be excluded from Individual Progression.
#                     Only used if ExcludeAccounts is enabled.
#                     This is useful for accounts that are used for bots, testing, or other purposes where progression should not be enforced.
#                     If the Playerbots module is enabled, "^RNDBOT.*" will exclude randombots from Individual Progression.
#                     To add more accounts you need to use capital letters and this format: "(^RNDBOT.*|TEST1|TEST2)"
#
#        Default:     "^RNDBOT.*"
#
IndividualProgression.ExcludedAccountsRegex = "^RNDBOT.*"
